DECLARE
    v_sql         CLOB;
    v_day_full    VARCHAR2(20);
    v_day_alias   VARCHAR2(20);
    v_chunk       VARCHAR2(32767);  
    v_month       VARCHAR2(2);
    v_year        VARCHAR2(4);
    v_first_date  DATE;
    v_last_date   DATE;

BEGIN
    v_month := NVL(:P498_MONTH_V1, TO_CHAR(SYSDATE, 'MM'));
    v_year  := TO_CHAR(SYSDATE, 'YYYY');

    v_first_date := TO_DATE('01-' || v_month || '-' || v_year, 'DD-MM-YYYY');
    v_last_date  := LAST_DAY(v_first_date);

    DBMS_LOB.CREATETEMPORARY(v_sql, TRUE);

    DBMS_LOB.APPEND(v_sql , 'SELECT 
        UAU.USER_NAME AS SALE_OFFICER,
        SUM(
            CASE 
                WHEN TRUNC(ASID.CREATED_ON) BETWEEN TO_DATE(''' || TO_CHAR(v_first_date, 'DD-MON-YYYY') || ''', ''DD-MON-YYYY'') 
                                               AND TO_DATE(''' || TO_CHAR(v_last_date, 'DD-MON-YYYY') || ''', ''DD-MON-YYYY'')
                  OR TRUNC(ASID.UPDATED_ON) BETWEEN TO_DATE(''' || TO_CHAR(v_first_date, 'DD-MON-YYYY') || ''', ''DD-MON-YYYY'') 
                                               AND TO_DATE(''' || TO_CHAR(v_last_date, 'DD-MON-YYYY') || ''', ''DD-MON-YYYY'')
            THEN 1 
            ELSE 0 
        END
    ) AS TOTAL_CALLS');

    -- Generate 31 day-wise columns
    FOR i IN 1..31 LOOP
        v_day_alias := 'Day ' || TO_CHAR(i, 'FM00');
        BEGIN
            v_day_full := TO_CHAR(TO_DATE(i || '-' || v_month || '-' || v_year, 'DD-MM-YYYY'), 'DD-MM-YYYY');

            DBMS_LOB.APPEND(v_sql, ' ,
                SUM(
                    CASE 
                        WHEN TO_CHAR(ASID.CREATED_ON, ''DD-MM-YYYY'') = ''' || v_day_full || ''' 
                             OR TO_CHAR(ASID.UPDATED_ON, ''DD-MM-YYYY'') = ''' || v_day_full || '''
                        THEN 1
                        ELSE NULL
                    END
                ) AS "' || v_day_alias || '"');
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_LOB.APPEND(v_sql, ', NULL AS "' || v_day_alias || '"');
        END;
    END LOOP;

    -- Main FROM and JOINs
    DBMS_LOB.APPEND(v_sql, '
        FROM AB_UM_APPLICATION_USERS UAU
        LEFT JOIN AB_SALE_INFO SI ON SI.EMP_ID = UAU.USER_ID
        LEFT JOIN AB_SALE_INFO_DET ASID 
               ON ASID.SALE_ID = SI.SALE_ID
              AND ASID.DET_SALE_TYPE = ''CUSTOMER ASSIGN DET''
              AND ASID.CALL_STATUS IN (''OUTGOING CALL'')
              AND TRUNC(ASID.UPDATED_ON) BETWEEN TO_DATE(''' || TO_CHAR(v_first_date, 'DD-MON-YYYY') || ''', ''DD-MON-YYYY'') 
                                            AND TO_DATE(''' || TO_CHAR(v_last_date, 'DD-MON-YYYY') || ''', ''DD-MON-YYYY'')
        LEFT JOIN AB_UM_APP_USER_ORG ORG ON ORG.USER_ID = UAU.USER_ID
        WHERE UAU.STATUS = ''Y''
          AND UAU.USER_ID IN (124, 119, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 116, 85, 98, 117, 107, 118, 86, 121, 120)
          AND ORG.ORG_ID = :GV_ORG_ID
        GROUP BY UAU.USER_NAME');

    -- (Optional) Print SQL chunk-wise
    FOR i IN 0 .. CEIL(DBMS_LOB.GETLENGTH(v_sql)/32767) - 1 LOOP
        v_chunk := DBMS_LOB.SUBSTR(v_sql, 32767, i * 32767 + 1);
        -- DBMS_OUTPUT.PUT_LINE(v_chunk); -- for debugging
    END LOOP;

    RETURN v_sql;
END;

