DECLARE
    v_sql      CLOB;
    v_day      VARCHAR2(20);
    v_last_day NUMBER;
    v_chunk    VARCHAR2(32767);

BEGIN
    v_sql := 'SELECT 
               UAU.USER_NAME AS SALE_OFFICER,  
                SUM(
                CASE 
                    WHEN TRUNC(ASID.CREATED_ON) >= TRUNC(SYSDATE, ''MM'') 
                      OR TRUNC(ASID.UPDATED_ON) >= TRUNC(SYSDATE, ''MM'') 
                    THEN 1 
                    ELSE 0
                END
            ) AS TOTAL_CALLS';
               -- Count(ASID.SD_ID) AS TOTAL_CALLS

    v_last_day := TO_NUMBER(TO_CHAR(LAST_DAY(SYSDATE), 'DD'));


FOR i IN 1..v_last_day LOOP
    v_day := TO_CHAR(TRUNC(SYSDATE, 'MM') + (i - 1), 'DD-MM-YYYY');

    v_sql := v_sql || ',' || CHR(10);

    IF v_day = TO_CHAR(SYSDATE, 'DD-MM-YYYY') THEN
        -- Green highlight for current date
        v_sql := v_sql || ' ''<a style="color:GREEN;font-weight:bold;" href="'' || get_secure_link_V(
            MAX(CASE 
                WHEN TO_CHAR(ASID.CREATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                  OR TO_CHAR(ASID.UPDATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                THEN SI.EMP_ID 
            END),
            MAX(CASE 
                WHEN TO_CHAR(ASID.CREATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                  OR TO_CHAR(ASID.UPDATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                THEN ASID.UPDATED_ON 
            END)
        ) || ''">'' ||
        TO_CHAR(SUM(
            CASE 
                WHEN TO_CHAR(ASID.CREATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                  OR TO_CHAR(ASID.UPDATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                THEN 1 
                ELSE NULL
            END
        )) || 
        ''</a>'' AS "' || v_day || '"';
    ELSE
        -- Normal for other dates
        v_sql := v_sql || ' ''<a href="'' || get_secure_link_V(
            MAX(CASE 
                WHEN TO_CHAR(ASID.CREATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                  OR TO_CHAR(ASID.UPDATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                THEN SI.EMP_ID 
            END),
            MAX(CASE 
                WHEN TO_CHAR(ASID.CREATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                  OR TO_CHAR(ASID.UPDATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                THEN ASID.UPDATED_ON 
            END)
        ) || ''">'' ||
        TO_CHAR(SUM(
            CASE 
                WHEN TO_CHAR(ASID.CREATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                  OR TO_CHAR(ASID.UPDATED_ON, ''DD-MM-YYYY'') = ''' || v_day || ''' 
                THEN 1 
                ELSE NULL
            END
        )) || 
        ''</a>'' AS "' || v_day || '"';
    END IF;

    END LOOP;

    v_sql := v_sql || '
        FROM AB_UM_APPLICATION_USERS UAU
        LEFT JOIN AB_SALE_INFO SI ON SI.EMP_ID = UAU.USER_ID
        LEFT JOIN AB_SALE_INFO_DET ASID 
               ON ASID.SALE_ID = SI.SALE_ID
              AND ASID.DET_SALE_TYPE = ''CUSTOMER ASSIGN DET''
              AND ASID.CALL_STATUS IN (''OUTGOING CALL'')
              --AND ASID.STATUS = ''Y''
           --  AND TRUNC(ASID.UPDATED_ON) >= trunc(SYSDATE, ''MM'')
        LEFT JOIN AB_UM_APP_USER_ORG ORG ON ORG.USER_ID = UAU.USER_ID
        WHERE UAU.STATUS = ''Y''
     AND UAU.USER_ID IN (124, 119, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 116, 85, 98, 117, 107, 118, 121, 120)

AND UAU.USER_ID = NVL(:P498_SALE_OFFICER, UAU.USER_ID)
          AND ORG.ORG_ID = :GV_ORG_ID
          
        GROUP BY UAU.USER_NAME ';

    -- Print chunks
    FOR i IN 0 .. CEIL(DBMS_LOB.GETLENGTH(v_sql)/32767) - 1 
    LOOP
        v_chunk := DBMS_LOB.SUBSTR(v_sql, 32767, i * 32767 + 1);
      --  DBMS_OUTPUT.PUT_LINE(v_chunk);
    END LOOP;

    RETURN v_sql;
END;